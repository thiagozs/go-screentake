name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      - name: Install Linux deps (X11/OpenGL/ALSA)
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential xorg-dev libgl1-mesa-dev libasound2-dev libxi-dev libxcursor-dev libxrandr-dev libxinerama-dev
      - name: Build linux amd64
        run: GOOS=linux GOARCH=amd64 make release-one VERSION=${GITHUB_REF_NAME#v}
      - name: Build linux arm64
        run: GOOS=linux GOARCH=arm64 make release-one VERSION=${GITHUB_REF_NAME#v}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: dist/*linux*

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      - name: Build windows amd64
        run: |
          setx GOOS windows
          setx GOARCH amd64
          make release-one VERSION=${env:GITHUB_REF_NAME.TrimStart('refs/tags/v')}
        shell: pwsh
      - name: Build windows arm64
        run: |
          setx GOOS windows
          setx GOARCH arm64
          make release-one VERSION=${env:GITHUB_REF_NAME.TrimStart('refs/tags/v')}
        shell: pwsh
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: dist/*windows*

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      - name: Build darwin amd64
        run: GOOS=darwin GOARCH=amd64 make release-one VERSION=${GITHUB_REF_NAME#v}
      - name: Build darwin arm64
        run: GOOS=darwin GOARCH=arm64 make release-one VERSION=${GITHUB_REF_NAME#v}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: darwin
          path: dist/*darwin*

  publish:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Checkout (para obter CHANGELOG)
        uses: actions/checkout@v4
      - name: Flatten artifacts
        run: |
          mkdir -p release
          find dist -type f -name '*.tar.gz' -exec cp {} release/ \;
          find dist -type f -name '*.zip' -exec cp {} release/ \;
      - name: Generate checksums
        run: |
          cd release
          sha256sum * > SHA256SUMS.txt
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/*
          body_path: CHANGELOG.md
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
